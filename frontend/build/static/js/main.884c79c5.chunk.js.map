{"version":3,"sources":["helpers/requestHandler.tsx","navbar/Navbar.tsx","mainView/MainView.tsx","product/ProductPage.tsx","signInSignUp/FormMall.tsx","contacts/ContactPage.tsx","product-form/product-form.tsx","shipper-form/shipper-form.tsx","admin/admin.tsx","signInSignUp/Form.tsx","shoppingCard/shoppingCard.tsx","checkOut/checkOut.tsx","singleProduct/SingleProduct.tsx","ViewContainer.tsx","Layout.tsx","App.tsx","serviceWorker.ts","index.tsx","mainView.jpg","support.jpg"],"names":["requestHandler","requestBody","a","Axios","url","method","data","JSON","stringify","headers","res","actuResponse","status","Error","console","log","loginHandler","createUser","alert","errors","message","changeUrl","get","response","getValueFromLocalstoreage","key","currentValue","localStorage","getItem","parse","Navbar","props","getLegthOfProducts","shoppingCart","amount","length","handleOrderPrice","initTolatlPrice","unitPrice","setState","totalPrice","renderProductDetail","ids","map","el","_id","count","forEach","i","uniqProducts","_","filter","pr","rt","product","className","src","process","pictureUrl","alt","productName","id","state","toggle","tooltipOpen","this","to","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","signedInUser","Tooltip","placement","isOpen","target","React","Component","MainView","mainView","ProductPage","timerID","getProducts","query","products","renderProducts","viewProduct","unitInStock","showAddedProduct","visible","window","setTimeout","addProduct","parsedShoppingCart","push","setItem","getAddedProducts","choosenProduct","description","FormNall","style","formtStyle","children","display","flexDirection","alignItems","margin","width","marginTop","padding","backgroundColor","ContactPage","handleSubmit","event","preventDefault","email","createSubscription","handleOnChange","value","support","ul","onSubmit","ulDetail","placeholder","onChange","required","ProductForm","Number","modified","createProduct","handleProduktName","handleProduktDescription","handleProduktPictureurl","handleUnitInStock","handleProductPrice","displayChoosenDataToModifiy","name","min","max","rows","cols","ShipperForm","companyName","shippingPrice","shippingMethod","createShipper","handleCompnayName","handleShippingPrice","handleShippingMethod","Admin","getAllOrders","orders","getAllUsers","users","getAllShipperMethods","shippers","getAllProducts","showOrderDetails","current_orders_products","getSpeceficOrderDetails","getAllSubscription","subscriptions","hideOrderDetail","hideChoosenShipper","choosenShipper","orderId","shipper","showCurrentOrderProduct","counted","getChoosenShipper","getSpeceficShipper","displayChoosenShipper","displayOrders","order","shipFirstName","shipLastName","shippAdress","shippPostelCode","shipCity","shipMail","shipPhoneNo","orderDate","selectedShipper","hideOrder","displayShippers","updateThisShipper","deleteThisShipper","hideShipper","hideUser","showProductForm","hideProduktForm","modifiedProdcut","showShipperForm","hideShipperForm","modifiedShipp","modifiedShipper","hideProducts","hideSubscription","displayUsers","user","username","displayProduktForm","displayShipperForm","modifyChoosenProduct","removeThisProduct","then","deleteProduct","n","deleteShipper","displayProduct","displaySubscriptions","subscription","Form","password","signedUp","text","saveUser","login","parsetUsers","removeItem","userId","existUser","savedUser","sigendInUser","choosenProducts","signOut","current_user","current_orders","handleLogout","handleLogin","renderSignInSignUp","renderUsername","getCurrentOrders","userInfo","getSpeceficOrder","hideAllOrders","displayCurrentOrder","test","renderForm","renderCurrentUserInfo","ShoppingCard","showMessageForRemovedProduct","some","index","splice","removed","getProductsFromShopingCard","renderLinkToCheckOut","Alert","color","CheckOut","getShipperMethods","createdOrder","productIds","item","toString","current_order","items","tel","location","assign","handleFirstName","handleLastName","handleAddresss","handleShipperPostalconde","handleShipperCity","handleEmailAndPhone","handleOrderDate","finalTotalPrice","handleSelectShipper","renderShippers","Date","toISOString","SingleProduct","findSpeceficProduct","url_string","href","URL","param","pathname","substring","getSpeceficProduct","removeSelectedProduct","renderSelectedProdcut","ViewContainer","Fragment","exact","path","component","render","Layout","checkForUser","parsedCurrentUser","renderCurrentSignedInUser","selectedUsers","currentShoppingCard","App","isLoggedin","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.884c79c5.chunk.js","sourcesContent":["import Axios from 'axios';\r\nexport async function requestHandler(requestBody:any){\r\n    \r\n      try  {\r\n        let res = await Axios({\r\n            url:'/graphql',\r\n            method: 'POST',\r\n            data: JSON.stringify(requestBody),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          })\r\n          \r\n          let actuResponse = await res.data;\r\n        \r\n        \r\n        if (res.status !== 200) {\r\n            //When user insert wrong info we send it catch\r\n            throw new Error('Request Failed at request handler'+ res.status)\r\n        } else {\r\n          return actuResponse.data\r\n          \r\n        }\r\n\r\n\r\n      } catch(err){\r\n         console.log(err)\r\n      }\r\n}\r\n\r\nexport async function loginHandler(requestBody:any){\r\n  try  {\r\n    let res = await Axios({\r\n        url:'/graphql',\r\n        method: 'POST',\r\n        data: JSON.stringify(requestBody),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      \r\n      let actuResponse = await res.data;\r\n    \r\n    \r\n    if (res.status !== 200) {\r\n        //When user insert wrong info we send it catch\r\n        throw new Error('Request Failed '+ res.status)\r\n    } else if(actuResponse.data.createUser === null || actuResponse.data === null) {\r\n        //When use insert the same email to create a new user\r\n        alert(actuResponse.errors[0].message);\r\n    } else if(actuResponse.errors) {\r\n         \r\n          alert('Error at sign in!')\r\n    } else {\r\n      //this.props.isLoggedin(actuResponse.data.login)\r\n        return actuResponse.data\r\n    }\r\n\r\n\r\n  } catch(err){\r\n    alert('Wrong info!Try again!')\r\n     console.log(err)\r\n  }\r\n}\r\nexport async function changeUrl(url:string){\r\n  try {\r\n    let response = await Axios.get(url);\r\n    let actuallResponse = await response.data;\r\n\r\n\r\n  } catch(error) {\r\n    console.log(error)\r\n  }\r\n  \r\n}\r\nexport function setValueToLocalstoreage(key:string, value:any){\r\n  \r\n   localStorage.setItem(key, JSON.stringify(value));\r\n  \r\n}\r\nexport function getValueFromLocalstoreage(key:string){\r\n\r\n   let currentValue:any =  localStorage.getItem(key);\r\n    let currentValueParsed = JSON.parse(currentValue)\r\n   return currentValueParsed\r\n}\r\nexport function removeValueFromLocalstoreage(key:string){\r\n\r\n   let currentValue =  localStorage.removeItem(key)\r\n   return currentValue;\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.css';\r\nimport { changeUrl, getValueFromLocalstoreage } from '../helpers/requestHandler';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nimport * as _ from 'underscore';\r\ninterface Props{\r\n    signedInUser:()=>any,\r\n    amount:number,\r\n    totalPrice:number\r\n}\r\n\r\ninterface State{\r\n\r\n  tooltipOpen:boolean,\r\n  totalPrice:number\r\n\r\n}\r\n\r\nexport default class Navbar extends React.Component<Props, State>{\r\n    constructor(props:Props){\r\n        super(props);\r\n        this.state = {\r\n      \r\n          tooltipOpen:false,\r\n          totalPrice:0\r\n        }\r\n    }\r\n\r\n    getLegthOfProducts = () => {\r\n      let shoppingCart:any = getValueFromLocalstoreage(\"shoppingcart\");\r\n      if(shoppingCart !== null) {\r\n\r\n        let amount = this.props.amount !== 0 ? this.props.amount : shoppingCart.length\r\n        return `(${amount})`\r\n      }\r\n      \r\n    }\r\n    componentDidMount() { this.handleOrderPrice()}\r\n   \r\n    handleOrderPrice = ()=> { \r\n      let shoppingCart:any = getValueFromLocalstoreage(\"shoppingcart\");\r\n      \r\n          let initTolatlPrice = 0\r\n          \r\n          if( shoppingCart !== null && shoppingCart.length > 0) {\r\n            \r\n              for(let product of shoppingCart) {\r\n                  let price = product.unitPrice\r\n              \r\n                  initTolatlPrice += price\r\n              }\r\n         \r\n            this.setState({totalPrice: initTolatlPrice}) \r\n          }\r\n    \r\n    }\r\n   \r\n    renderProductDetail = () => {\r\n      let shoppingCart:any = getValueFromLocalstoreage(\"shoppingcart\");\r\n      \r\n      if(shoppingCart && shoppingCart !== null && shoppingCart.length > 0) {\r\n        let ids = shoppingCart.map((el:{productName: string, _id:string, unitPrice:number, unitInStock:number, pictureUrl:string })=>{\r\n          return el._id\r\n        })  \r\n        let count:any = {};\r\n        ids.forEach(function(i:any) { \r\n        count[i] = (count[i]||0) + 1});\r\n      \r\n   \r\n        let uniqProducts =  _.uniq(shoppingCart.filter( (pr:{productName: string, _id:string, unitPrice:number, unitInStock:number, pictureUrl:string,amount:any }) =>{\r\n              let rt:string\r\n            \r\n            for(rt in count ) {\r\n          \r\n                if(pr._id === rt ) {\r\n                  pr.amount = count[rt]\r\n                return pr\r\n                 \r\n                }\r\n            } \r\n\r\n        }), '_id').map((product:any)=>{\r\n    \r\n           return <div className={\"d-flex flex-column align-items-center\"}>\r\n                    <img className={'imgNav'} src={process.env.PUBLIC_URL +`/imgs/${product.pictureUrl}`} alt={product.productName}/>\r\n                    <span>{product.productName}</span>\r\n                    <span>{product.unitPrice+' SEK'}</span>\r\n                    <span>Quantity: {product.amount}</span>\r\n                  </div>\r\n    \r\n        })  \r\n     \r\n        return <div>\r\n                  {uniqProducts}\r\n                  <h6 id={\"totalPrice\"}>Total Amount:  {`${this.props.totalPrice === 0?  this.state.totalPrice: this.props.totalPrice } SEK` }</h6>\r\n             </div>\r\n\r\n\r\n      } else {\r\n        return <span>Your shopping cart is empty!</span>\r\n      }\r\n    }\r\n\r\n\r\n    \r\n    toggle = () =>{ this.setState(state => ({ tooltipOpen:!state.tooltipOpen})) }\r\n  \r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light nav-margin\">\r\n                \r\n            <Link to={\"/\"}>\r\n                   <span className=\"navbar-brand\" onClick={()=>{ changeUrl('main')}}>SmartHeadphones</span>\r\n                 \r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n          \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n\r\n            <li className=\"nav-item active\">\r\n            <Link to={\"/productPage\"}>\r\n                   \r\n                    <span className=\"nav-link\" onClick={()=>{ changeUrl('productPage')}}> Product Page</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          \r\n            <Link to={\"/contact\"}>\r\n                    <span className=\"nav-link\" onClick={()=>{ changeUrl('contact')}}> Contact Page</span>\r\n            </Link>\r\n          </li>\r\n          <li  className=\"nav-item\">\r\n            <Link to={\"/SignInSignUp\"}>\r\n                <span className=\"nav-link\" onClick={()=>{ changeUrl('SignInSignUp')}}> SignIn SignUp Page</span>\r\n            </Link>\r\n          </li>\r\n          <li  className=\"nav-item\">\r\n            {this.props.signedInUser()\r\n            }\r\n          </li>\r\n        \r\n        </ul>\r\n            \r\n        <h4  className=\"nav-item\">\r\n                \r\n            <Link to={\"/shoppingCard\"}>\r\n              \r\n                <span \r\n                onClick={()=>{ changeUrl('shoppingCard')}} \r\n                className=\"fas fa-shopping-cart text-black navbar-text nav-link kundVagnWidth\" id=\"TooltipExample\"> \r\n\r\n            \r\n              <Tooltip placement=\"right\" isOpen={this.state.tooltipOpen} target=\"TooltipExample\" toggle={this.toggle}>\r\n                <ul>\r\n                  {this.renderProductDetail()}\r\n                </ul>\r\n              </Tooltip>\r\n            \r\n       \r\n                Shopping Cart {this.getLegthOfProducts()}</span>\r\n            </Link>\r\n          </h4>\r\n        </div>\r\n        </nav>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React  from 'react';\r\nimport './mainView.css'\r\nimport mainView from '../mainView.jpg'\r\n\r\nexport default class MainView extends React.Component{\r\n \r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n            <div className=\"mainViewContainer\">\r\n                <h4 > Welcome To SmartHeaphones</h4>\r\n                <p className=\"paragraph\">\r\n                    SmartHeaphones is a new dropshipping website in Sweden.Smart headphones\r\n                    present a new direction for headphones and personal audio devices.Until \r\n                    now, headphones have been limited to playing music, general audio, or \r\n                    providing noise cancelation features. Smart headphones combine the intelligence\r\n                    of a smartphone with the audio capabilities of headphones, and extend those \r\n                    capabilities beyond any personal audio device.Some of these smart capabilities \r\n                    include language translation, fitness and heart rate tracking,voice-based personal \r\n                    assistants, contextual location-based suggestions, environment-based noise \r\n                    suppression or audio enhancement, and gesture and touch-based control, among others.\r\n                </p>\r\n            </div>\r\n            <div>\r\n                  <img className={'mainViewImg'} src={process.env.PUBLIC_URL +`${mainView }`} alt={\"main-view\"}/>\r\n            </div>\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport  './productPage.css';\r\nimport { requestHandler} from '../helpers/requestHandler';\r\nimport { Alert } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\ninterface Props {\r\n  getAddedProducts:(data:[{productName: string,_id:string, unitPrice:number, unitInStock:number,pictureUrl:string}])=>void,\r\n \r\n}\r\n\r\ninterface Product {\r\n    productName: string,\r\n    _id:string,\r\n    unitPrice:number,\r\n    unitInStock:number,\r\n    pictureUrl:string,\r\n    description:string\r\n}\r\ninterface State {\r\n    products:Product[],\r\n    viewProduct:boolean,\r\n    choosenProduct:Product,\r\n    visible:boolean\r\n}\r\nexport default class ProductPage extends React.Component<Props, State> {\r\n  //private pictures: string[]\r\n  private timerID:any\r\n    constructor(props:Props){\r\n        super(props);\r\n            this.state ={ \r\n            products:[{productName: \"\", _id: \"\", unitPrice:0, unitInStock:0, pictureUrl:\"\", description:\"\"}],\r\n            viewProduct:false,\r\n            choosenProduct:{productName: \"\", _id: \"\", unitPrice:0, unitInStock:0, pictureUrl:\"\", description:\"\"},\r\n            visible:false\r\n          \r\n        \r\n        }\r\n\r\n   \r\n    }\r\n\r\n\r\n    componentDidMount() { this.getProducts() }\r\n    getProducts = async () => {\r\n      //actuResponse.data.products\r\n        let requestBody = {\r\n              query: `\r\n              { products {\r\n                  productName\r\n                  _id\r\n                  unitPrice\r\n                  unitInStock\r\n                  pictureUrl \r\n                  description\r\n                }\r\n              }`\r\n            };\r\n          \r\n          let data = await  requestHandler(requestBody);\r\n\r\n          typeof data !== 'undefined' ? this.setState({products:data.products}): this.setState({products:[]})\r\n          \r\n\r\n    }\r\n   \r\n    renderProducts= ()=> {\r\n        if(this.state.products.length > 0 && this.state.viewProduct === false) {\r\n           let products =  this.state.products.map((product:{ productName: string, _id:string, unitPrice:number,unitInStock:number, pictureUrl:string, description:string})=>{\r\n            \r\n            if(product._id !== '') {\r\n              \r\n             return   <div  className={\"backgroundOdd d-flex flex-column align-items-center\"}>\r\n                <img className={'img'} src={process.env.PUBLIC_URL +`/imgs/${product.pictureUrl}`} alt={product.productName}/>\r\n               \r\n                <h6>{product.productName}</h6>\r\n                <h6>{product.unitPrice+\" SEK\"}</h6>\r\n                <h6>Produkt quentity: {product.unitInStock}</h6>\r\n                <Link to={`/singleProduct/id=${product._id}`}> \r\n                 <button id=\"viewButton\" onClick={()=> this.viewProduct(product)}>View Product!</button>\r\n                </Link> \r\n              </div>\r\n            }\r\n                    \r\n            })\r\n\r\n\r\n            return <div className={\"container-fluid d-flex flex-column  \"}> \r\n                      {products}\r\n                  </div>\r\n        }\r\n    }\r\n\r\n    showAddedProduct = ()=> { \r\n\r\n      this.setState({visible:true},()=>{\r\n        window.setTimeout(()=>{\r\n          this.setState({visible:false})\r\n        },1000)\r\n      });\r\n\r\n\r\n    \r\n    }\r\n\r\n\r\n    addProduct = (product:{ productName: string, _id:string, unitPrice:number,unitInStock:number,pictureUrl:string})=>{\r\n        \r\n        let shoppingCart:any = localStorage.getItem(\"shoppingcart\");\r\n        let parsedShoppingCart = JSON.parse(shoppingCart);\r\n        parsedShoppingCart.push(product);\r\n        \r\n        localStorage.setItem(\"shoppingcart\", JSON.stringify(parsedShoppingCart));\r\n        console.log(parsedShoppingCart, 'here is shopping cart 2')\r\n        this.props.getAddedProducts(parsedShoppingCart);\r\n       this.showAddedProduct();\r\n      \r\n\r\n    }\r\n    viewProduct = (product:{ productName: string, _id:string, unitPrice:number,unitInStock:number, pictureUrl:string, description:string})=>{\r\n      this.setState({ viewProduct:true, choosenProduct: product})\r\n     \r\n    }\r\n\r\n\r\n/*   \r\n    in case if singleProductPage wont work\r\n      viewOnProduct = ()=>{\r\n      if(this.state.viewProduct) {\r\n        return <div>\r\n        <h5 id=\"link\" onClick={()=> this.setState({viewProduct:false}) }>Go Back!</h5>\r\n        <Alert color=\"alert alert-success\" isOpen={this.state.visible} >\r\n               You Added One Product To Shopping Cart\r\n        </Alert>\r\n        <div  className={\"backgroundOdd d-flex flex-column align-items-center\"}>\r\n          <img className={'img'} src={process.env.PUBLIC_URL +`/imgs/${this.state.choosenProduct.pictureUrl}`} alt={this.state.choosenProduct.productName}/>\r\n          <div className={\"detailContainer\"}>\r\n          <h6>Name: {this.state.choosenProduct.productName}</h6>\r\n          <h6> Price: {this.state.choosenProduct.unitPrice+\" SEK\"}</h6>\r\n          <h6>Produkt Quantity: {this.state.choosenProduct.unitInStock}</h6>\r\n          <div>Description: {this.state.choosenProduct.description}</div>\r\n         \r\n          <button id=\"addButton\"onClick={()=> this.addProduct(this.state.choosenProduct)}>Add To Shopping Cart!</button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      }\r\n    } */\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n          <div id=\"allContainer\">\r\n            {this.renderProducts()}\r\n            {/* this.viewOnProduct() */}\r\n          </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React,{CSSProperties} from 'react';\r\ninterface Props {\r\n    children: React.ReactNode\r\n}\r\nexport default function FormNall(props:Props){\r\n\r\n    return (\r\n      <div style={formtStyle}>\r\n          {props.children}\r\n      </div>\r\n\r\n    )\r\n  \r\n}\r\n\r\n\r\nconst formtStyle: CSSProperties ={\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n    margin:\"auto\",\r\n    width:\"50%\",\r\n    marginTop:\"3em\",\r\n    padding:\"1em\",\r\n    backgroundColor:\"#d7e4c7\"\r\n}","import React,{CSSProperties} from 'react';\r\nimport './contactPage.css'\r\nimport support from '../support.jpg'\r\nimport FormNall from '../signInSignUp/FormMall';\r\nimport { requestHandler} from '../helpers/requestHandler';\r\ninterface Props {\r\n    \r\n}\r\ninterface State{\r\n    email:string,\r\n\r\n}\r\nexport default class ContactPage extends React.Component<Props, State>{\r\n    constructor(props:Props){\r\n        super(props);\r\n            this.state ={ \r\n            email:'',\r\n   \r\n          \r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleSubmit= async (event:React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n    \r\n     \r\n        let requestBody = {\r\n            query: `\r\n            mutation {\r\n                createSubscription(SubscriptionInput: {email: \"${this.state.email}\"}) {\r\n                  _id\r\n                }\r\n              }\r\n              \r\n            `\r\n          };\r\n       \r\n          let data = await  requestHandler(requestBody);\r\n          if(typeof data !== 'undefined') {\r\n            data.createSubscription?this.setState({email:''},()=>{alert(\"You are subscribed now\")}):this.setState({email:''},()=>{alert(\"Try with new email or something went wrong\")});\r\n          }\r\n    }\r\n\r\n    handleOnChange = (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({[event.target.type]:event.target.value } as Pick <State,any> )}\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"contactContainer\">\r\n                <div>\r\n\r\n                <h1>Contact Us: </h1>\r\n                <ul className=\"detailContainer\">\r\n                    <li>Tel: 0733466726</li>\r\n                    <li>Address: Trollhättan, 456 34 Ab</li>\r\n                    <li>Support: 0733466726</li>\r\n                <img className={'supportImg'} src={process.env.PUBLIC_URL +`${support }`} alt={\"main-view\"}/>\r\n                </ul>\r\n                </div>\r\n                    <FormNall>\r\n                <div style={ul}>\r\n                    <span>Get our latest news</span>\r\n                    <form onSubmit={this.handleSubmit} style={ulDetail}>\r\n           \r\n                            <input className={\"inputStyle\"} type=\"email\"  placeholder='email' onChange={this.handleOnChange} value={this.state.email}  required/>\r\n                            \r\n                       \r\n                        <input type=\"submit\" value='Submit'/>\r\n                    </form>\r\n                </div>\r\n                    </FormNall>\r\n    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst ul:CSSProperties={\r\n    display: \"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n  \r\n \r\n}\r\nconst ulDetail:CSSProperties={\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin:\"auto\"\r\n  \r\n  \r\n \r\n}\r\n\r\n\r\n\r\n","import FormMall from '../signInSignUp/FormMall';\r\nimport React  from 'react';\r\nimport { requestHandler } from '../helpers/requestHandler';\r\n\r\n\r\ninterface State {\r\n    productName: string,\r\n    unitInStock:string,\r\n    unitPrice:string,\r\n    pictureUrl:string,\r\n    description:string\r\n  \r\n}\r\ninterface Modified {\r\n    _id:string,\r\n    productName: string,\r\n    unitInStock:number,\r\n    unitPrice:number,\r\n    pictureUrl:string,\r\n    description:string\r\n  \r\n}\r\ninterface Props {\r\n  modified:Modified\r\n}\r\nexport default class ProductForm extends React.Component<Props, State>{\r\n    constructor(props:Props) {\r\n        super(props);\r\n        this.state = {\r\n            productName: '',\r\n            unitInStock:'',\r\n            unitPrice:'',\r\n            pictureUrl:'',\r\n            description:''\r\n        }\r\n    }\r\n    handleSubmit= async (event:React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        \r\n        let requestBody = {\r\n            query: `\r\n            mutation { createProduct(ProductInput: \r\n            {productName: \"${this.state.productName}\",\r\n                 unitPrice:  ${Number(this.state.unitPrice)},\r\n                unitInStock:${Number(this.state.unitInStock)},\r\n                 pictureUrl:\"${this.state.pictureUrl}\",\r\n                description: \"${this.state.description}\"}) {\r\n                _id\r\n              }\r\n            }`\r\n           };\r\n        if(this.props.modified._id !== '') {\r\n     \r\n        requestBody = {\r\n           query: `mutation {\r\n            updateChoosenProduct(ProductUpdate: {\r\n                _id:\"${this.props.modified._id}\",\r\n                productName: \"${this.state.productName}\",\r\n                 unitPrice: ${Number(this.state.unitPrice)},\r\n                 unitInStock: ${Number(this.state.unitInStock)},\r\n                 pictureUrl: \"${this.state.pictureUrl}\", \r\n                   description:\"${this.state.description}\" }) {\r\n                  _id\r\n                  \r\n                }\r\n              }\r\n              \r\n            `\r\n          };\r\n       \r\n        }\r\n          let data = await  requestHandler(requestBody);\r\n          if(typeof data !== 'undefined') {\r\n              data.createProduct ? this.setState({\r\n                productName: '',\r\n                unitInStock:'',\r\n                unitPrice:'',\r\n                pictureUrl:'',\r\n                description:''\r\n            },()=>{\r\n                alert(\"Success to create a produkt id= \" +  data.createProduct._id)\r\n            })\r\n              :\r\n              \r\n              \r\n              this.setState({\r\n                productName: '',\r\n                unitInStock:'',\r\n                unitPrice:'',\r\n                pictureUrl:'',\r\n                description:''\r\n            },()=>{\r\n                alert(\"Updated Success\")\r\n            })\r\n          }\r\n        \r\n    }\r\n\r\n    handleProduktName = (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({productName:event.target.value }  )};\r\n    handleProduktDescription= (event: React.ChangeEvent<HTMLTextAreaElement>)=>{this.setState({description:event.target.value } )}\r\n    handleProduktPictureurl= (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({pictureUrl:event.target.value } )}\r\n    handleUnitInStock = (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({unitInStock:event.target.value } )}\r\n    handleProductPrice = (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({unitPrice:event.target.value } )}\r\n    displayChoosenDataToModifiy = ()=>{\r\n        if(this.props.modified._id !== '') {\r\n            return <ul className={\"orderContainer\"}>\r\n                <li>id: {this.props.modified._id}</li>\r\n                <li>namn: {this.props.modified.productName}</li>\r\n                <li>unitInStock: {this.props.modified.unitInStock}</li>\r\n                <li>pris: {this.props.modified.unitPrice}</li>\r\n                <li>url: {this.props.modified.pictureUrl}</li>\r\n                <li>beskrivning: {this.props.modified.description}</li>\r\n\r\n            </ul>\r\n        }\r\n    }\r\n    render () {\r\n        return( \r\n            /* Having multiple line may cause 400 request since string should be on one line */\r\n            <FormMall>\r\n                 <form onSubmit={this.handleSubmit} className={\"formStyle\"}>\r\n                    {this.displayChoosenDataToModifiy()}\r\n                    <input  className=\"inputStyle\" type=\"text\"  placeholder='product-name' onChange={this.handleProduktName} value={this.state.productName}  required/>\r\n                    <input  className=\"inputStyle\" type=\"number\" name=\"quantity\" min=\"1\" max=\"1000\" placeholder='unitInStock' onChange={this.handleUnitInStock} value={ this.state.unitInStock} required/>\r\n                    <input  className=\"inputStyle\" type=\"text\"  placeholder=\"unitPrice\" onChange={this.handleProductPrice} value={this.state.unitPrice} required/>\r\n                    <input   className=\"inputStyle\" type=\"text\"  placeholder=\"pictureUrl.jpg\" onChange={this.handleProduktPictureurl} value={this.state.pictureUrl} required/>\r\n                    <span>Avoid having multiple line</span>\r\n                    <textarea placeholder=\"descrption\" rows={1} cols={150}  value={this.state.description} onChange={this.handleProduktDescription} required/>\r\n                       \r\n                    <input type=\"submit\" value='Submit'/>\r\n                </form>\r\n            </FormMall>)\r\n    }\r\n}\r\n","import FormMall from '../signInSignUp/FormMall';\r\nimport React  from 'react';\r\nimport { requestHandler } from '../helpers/requestHandler';\r\n\r\n\r\ninterface State {\r\n    companyName:string,\r\n    shippingPrice:string,\r\n    shippingMethod:string\r\n  \r\n}\r\n\r\ninterface Modified {\r\n    _id:string,\r\n    companyName:string,\r\n    shippingPrice:Number,\r\n    shippingMethod:string\r\n  \r\n}\r\ninterface Props {\r\n    modified: Modified,\r\n    getAllShipperMethods:()=>any\r\n}\r\nexport default class ShipperForm extends React.Component<Props, State>{\r\n    constructor(props:Props) {\r\n        super(props);\r\n        this.state = {\r\n            companyName:'',\r\n            shippingPrice:'',\r\n            shippingMethod:''\r\n        }\r\n    }\r\n    handleSubmit= async (event:React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        let requestBody = {\r\n            query: `\r\n            mutation {\r\n                createShipper(ShipperInput: {companyName:\"${this.state.companyName}\",\r\n                 shippingPrice:${Number(this.state.shippingPrice)},\r\n                  shippingMethod:\"${this.state.shippingMethod}\"\r\n                }) {\r\n                  _id\r\n                }\r\n              }`\r\n           };\r\n       \r\n           if(this.props.modified._id !== '') {\r\n            requestBody = {\r\n                query: `\r\n                mutation {\r\n                    updateChoosenShipper(ShipperUpdate: {_id: \"${this.props.modified._id}\",\r\n                      companyName: \"${this.state.companyName}\",\r\n                       shippingPrice:${Number(this.state.shippingPrice)}, shippingMethod: \"${this.state.shippingMethod}\"}) {\r\n                      _id\r\n                    }\r\n                  }\r\n                `\r\n            }\r\n          \r\n           }\r\n    \r\n          let data = await  requestHandler(requestBody);\r\n          if(typeof data !== 'undefined') {\r\n\r\n              data.createShipper? this.setState({companyName:'', shippingMethod:'', shippingPrice:''},async ()=>\r\n                alert(\"Success to create a shipper method \"+data.createShipper._id)\r\n               ):alert(\"Succes to update\");\r\n          }\r\n    }\r\n\r\n    handleCompnayName = (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({companyName:event.target.value }  )};\r\n    handleShippingPrice= (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({shippingPrice:event.target.value } )}\r\n    handleShippingMethod= (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({shippingMethod:event.target.value } )}\r\n    displayChoosenDataToModifiy = ()=>{\r\n        if(this.props.modified._id !== '') {\r\n            return <ul className={\"orderContainer\"}>\r\n                <li>id: {this.props.modified._id}</li>\r\n                <li>namn: {this.props.modified.companyName}</li>\r\n                <li>Method: {this.props.modified.shippingMethod}</li>\r\n                <li>pris: {this.props.modified.shippingPrice}</li>\r\n            </ul>\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return( \r\n\r\n            <FormMall>\r\n                 <form onSubmit={this.handleSubmit} className={\"formStyle\"}>\r\n                    {this.displayChoosenDataToModifiy()}\r\n                    <input className={\"inputStyle\"} type=\"text\"  placeholder='company-name' onChange={this.handleCompnayName} value={this.state.companyName}  required/>\r\n                    <input className={\"inputStyle\"} type=\"text\"  placeholder=\"shipping-price\" onChange={this.handleShippingPrice} value={this.state.shippingPrice} required/>\r\n                    <input className={\"inputStyle\"} type=\"text\"  placeholder=\"shipping-method\" onChange={this.handleShippingMethod} value={this.state.shippingMethod} required/>\r\n                    <input type=\"submit\" value='Submit'/>\r\n                </form>\r\n            </FormMall>)\r\n    }\r\n}\r\n","import React,{CSSProperties} from 'react';\r\nimport { requestHandler } from '../helpers/requestHandler';\r\nimport ProductForm from '../product-form/product-form';\r\nimport ShipperForm  from '../shipper-form/shipper-form';\r\nimport './admin.css';\r\ninterface  Order {\r\n    _id:string,\r\n    shipFirstName: string,\r\n    shipLastName: string,\r\n    shippAdress: string,\r\n    shippPostelCode: string,\r\n    shipCity: string,\r\n    shipMail: string,\r\n    shipPhoneNo: string,\r\n    totalPrice: number,\r\n    orderDate: string,\r\n    createdOrder: string,\r\n    selectedShipper: string,\r\n    createdAt: string,\r\n    updatedAt: string\r\n    \r\n}\r\ninterface User {\r\n    _id:string,\r\n    username:string,\r\n    email:string\r\n  }\r\n  interface Shipper {\r\n    _id:string,\r\n    companyName:string,\r\n    shippingPrice:number\r\n    shippingMethod:string\r\n  }\r\ninterface Product {\r\n    productName: string,\r\n    _id:string,\r\n    unitPrice:number,\r\n    unitInStock:number,\r\n    pictureUrl:string,\r\n    description:string\r\n}\r\n  \r\ninterface ProductUser {\r\n    productName: string,\r\n    _id:string,\r\n    unitPrice:number,\r\n    unitInStock:number,\r\n    pictureUrl:string,\r\n    description:string,\r\n    counted:number\r\n}\r\ninterface choosenShipper {\r\n    _id:string,\r\n    companyName:string,\r\n    shippingPrice:number\r\n    shippingMethod:string\r\n  }\r\n\r\ninterface Subscription {\r\n    _id:string,\r\n    email:string\r\n}\r\ninterface State{\r\n  \r\n    orders:Order[],\r\n    users:User[],\r\n    shippers:Shipper[],\r\n    showProductForm:boolean,\r\n    showShipperForm:boolean,\r\n    products:Product[],\r\n    modified:Product,\r\n    modifiedProdcut:boolean,\r\n    modifiedShipper:Shipper,\r\n    modifiedShipp:boolean,\r\n    choosenShipper: {orderId:string, shipper:choosenShipper},\r\n    current_orders_products:{id:string, products: ProductUser[]},\r\n    subscriptions:Subscription[]\r\n\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\nexport default class Admin extends React.Component <Props, State>{\r\n    constructor(props:Props){\r\n        super(props);\r\n            this.state = { \r\n                orders:[],\r\n                users:[],\r\n                shippers:[],\r\n                showProductForm:false,\r\n                showShipperForm:false,\r\n                products:[],\r\n                modified:{productName: \"\", _id: \"\", unitPrice:0, unitInStock:0, pictureUrl:\"\", description:\"\"},\r\n                modifiedProdcut:false,\r\n                modifiedShipper:{ _id:'', companyName:'', shippingPrice:0, shippingMethod:''},\r\n                modifiedShipp:false,\r\n                choosenShipper:{orderId:'', shipper:{_id:'', companyName:'', shippingPrice:0, shippingMethod:''}},\r\n                current_orders_products:{id:'', products:[]},\r\n                subscriptions:[]\r\n        }\r\n    }\r\n\r\n    getAllOrders = async ()=>{\r\n        let requestBody = {\r\n            query: `\r\n            {\r\n                orders {\r\n                  _id\r\n                  shipFirstName\r\n                  shipLastName\r\n                  shippAdress\r\n                  shippPostelCode\r\n                  shipCity\r\n                  shipMail\r\n                  shipPhoneNo\r\n                  totalPrice\r\n                  orderDate\r\n                  createdOrder\r\n                  selectedShipper\r\n                  createdAt\r\n                  updatedAt\r\n                }\r\n              }\r\n              \r\n            `\r\n          };\r\n       \r\n          let data = await  requestHandler(requestBody);\r\n          if(typeof data !== 'undefined') {\r\n\r\n              this.setState({orders: data.orders},()=>{alert(this.state.orders.length)})\r\n          }\r\n    }\r\n\r\n    getAllUsers = async ()=>{\r\n        let requestBody = {\r\n            query: `{ users {\r\n                  _id\r\n                  email\r\n                  username\r\n                }\r\n              } `\r\n          };\r\n       \r\n          let data = await  requestHandler(requestBody);\r\n          if(typeof data !== 'undefined') {\r\n              this.setState({users: data.users},()=>{alert(this.state.users.length)})\r\n          }\r\n\r\n    }\r\n    getAllShipperMethods = async ()=>{\r\n        \r\n             let requestBody = {\r\n                 query: `{\r\n                     shippers {\r\n                       _id\r\n                       companyName\r\n                       shippingPrice\r\n                       shippingMethod\r\n                     }\r\n                   }`\r\n               };\r\n               let data = await  requestHandler(requestBody);\r\n               if(typeof data !== 'undefined') {\r\n                     this.setState({shippers: data.shippers}, ()=>{\r\n                         if(this.state.shippers.length <= 0) {\r\n                             alert('There is not shipper Method')\r\n                         }\r\n                     })\r\n               }else {\r\n                   this.setState({shippers: []})\r\n               }\r\n        \r\n    }\r\n    getAllProducts = async ()=>{\r\n        let requestBody = {\r\n            query: `{ products {\r\n                productName\r\n                _id\r\n                unitPrice\r\n                unitInStock\r\n                pictureUrl \r\n                description\r\n                }\r\n            }`\r\n            };\r\n        \r\n        let data = await  requestHandler(requestBody);\r\n        typeof data !== 'undefined' ? this.setState({products:data.products},()=>{alert(this.state.products.length)}): this.setState({products:[]})\r\n        \r\n    }\r\n    showOrderDetails = async (id:string) => {\r\n      \r\n          let requestBody = {\r\n              query: `\r\n              {\r\n                getSpeceficOrderDetails(_id: \"${id}\") {\r\n                  productName\r\n                  pictureUrl\r\n                  unitInStock\r\n                  unitPrice\r\n                  counted\r\n                }\r\n              } `\r\n            };\r\n      \r\n            let data = await requestHandler(requestBody);\r\n            typeof data !== 'undefined' ? this.setState({current_orders_products: {id:id, products:data.getSpeceficOrderDetails}})\r\n            :this.setState({current_orders_products:{id:'', products:[]}})\r\n    \r\n       \r\n  \r\n      }\r\n    getAllSubscription = async () => {\r\n      \r\n          let requestBody = {\r\n              query: `\r\n              {\r\n                subscriptions {\r\n                  _id\r\n                  email\r\n                }\r\n              }\r\n               `\r\n            };\r\n      \r\n            let data = await requestHandler(requestBody);\r\n            typeof data !== 'undefined' ? this.setState({subscriptions:data.subscriptions},()=>{alert(this.state.subscriptions.length)}):this.setState({subscriptions:[]})\r\n    \r\n       \r\n  \r\n      }\r\n      hideOrderDetail = ()=>{this.setState( {current_orders_products:{id:'', products:[]}})}\r\n      hideChoosenShipper = ()=>{this.setState({ choosenShipper:{orderId:'', shipper:{_id:'', companyName:'', shippingPrice:0, shippingMethod:''}}})}\r\n    showCurrentOrderProduct = ()=>{\r\n        if(this.state.current_orders_products.products.length > 0) {\r\n            let orders = this.state.current_orders_products.products.map((product)=>{\r\n                return <ul className={\"itemOrderContainer\"} >\r\n                        \r\n                        <img className={\"img-order\"} src={process.env.PUBLIC_URL +`/imgs/${product.pictureUrl}`} alt={product.productName}/>\r\n                        <li>{product.productName}</li>\r\n                        <li>{product.unitPrice+ \"SEK\"}</li>\r\n                        <li>Amount-shop: {product.counted}</li>\r\n                    </ul>\r\n            })\r\n            return <div>\r\n              <button onClick={this.hideOrderDetail}>Hide Order Detail</button>\r\n              {orders}\r\n            </div>\r\n        }\r\n    }\r\n    getChoosenShipper = async (id:string, orderId:string) => {   \r\n        let requestBody = {\r\n        query: `\r\n        {   getSpeceficShipper(_id: \"${id}\") {\r\n                companyName\r\n                shippingPrice\r\n                shippingMethod\r\n            }\r\n            }`\r\n        };\r\n        let data = await requestHandler(requestBody);\r\n      \r\n        typeof data !== 'undefined' ? this.setState({choosenShipper:{orderId:orderId, shipper:data.getSpeceficShipper}})\r\n        :this.setState({choosenShipper:{orderId:'', shipper:{_id:'', shippingPrice:0, shippingMethod:'', companyName:''}}})\r\n    \r\n        \r\n    \r\n    }\r\n    displayChoosenShipper = ()=> {\r\n        return <div>\r\n        <button onClick={this.hideChoosenShipper}>Hide Choosen Shipper</button>\r\n        <ul className={\"orderContainer\"}>\r\n                <li>{this.state.choosenShipper.shipper.companyName}</li>\r\n                <li>{this.state.choosenShipper.shipper.shippingMethod}</li>\r\n                <li>{this.state.choosenShipper.shipper.shippingPrice+ \"SEK\"}</li>\r\n            </ul>\r\n        \r\n        </div>\r\n    }\r\n\r\n\r\n    \r\n    displayOrders = ()=> {\r\n        if(this.state.orders.length > 0) {\r\n        let orders =  this.state.orders.map((order)=>{\r\n            return <ul className={\"orderContainer\"}>\r\n                        One Order: \r\n                        <li>Id: {order._id}</li>\r\n                        <li>Name: {order.shipFirstName}</li>\r\n                        <li>Lastname: {order.shipLastName}</li>\r\n                        <li>Address: {order.shippAdress} Postnum: {order.shippPostelCode} City: {order.shipCity}</li>\r\n                        <li>Email: {order.shipMail}</li>\r\n                        <li>Tel: {order.shipPhoneNo}</li>\r\n                        <li>Date: {order.orderDate}</li>\r\n                        <button className={\"orderButton\"}  onClick={()=> this.showOrderDetails(order._id)}>Visa order details</button>\r\n                        <div>{this.state.current_orders_products.id === order._id ? this.showCurrentOrderProduct():''}</div>\r\n                        \r\n                        \r\n                        <button  className={\"orderButton\"} onClick={()=> this.getChoosenShipper(order.selectedShipper, order._id)}>Visa valt frakt</button>\r\n                        {this.state.choosenShipper.orderId === order._id ? this.displayChoosenShipper():''}\r\n                 </ul>\r\n            })\r\n\r\n            return <div>\r\n            <button onClick={this.hideOrder}>Hide all orders!</button>\r\n            {orders}\r\n            </div>  \r\n        }\r\n    }\r\n    displayShippers = ()=> {\r\n        if(this.state.shippers.length > 0 ) {\r\n            let shippers = this.state.shippers.map((shipper)=>{\r\n                return <ul className={\"orderContainer\"}>\r\n                    <span>One shipping method</span>\r\n                    <li>{shipper._id}</li>\r\n                    <li>{shipper.companyName}</li>\r\n                    <li>{shipper.shippingMethod}</li>\r\n                    <li>{shipper.shippingPrice+ \"SEK\"}</li>\r\n                    <button onClick={()=> this.updateThisShipper(shipper)}>Update This shipper Method</button>\r\n                    <button onClick={()=> this.deleteThisShipper(shipper)}>Delete This Shipper</button>\r\n                </ul>\r\n            })\r\n            return <div>\r\n            <button onClick={this.hideShipper}>Hide all shippng methods!</button>\r\n            {shippers}\r\n            </div>  \r\n        }\r\n    }\r\n    hideOrder = ()=>{ this.setState({ orders:[]})};\r\n    hideUser= ()=>{ this.setState({ users:[]})};\r\n    hideShipper= ()=>{ this.setState({ shippers:[]})};\r\n    showProductForm = ()=>{this.setState({ showProductForm:true})};\r\n    hideProduktForm = ()=>{this.setState({ showProductForm:false, modifiedProdcut:false, modified:{productName: \"\", _id: \"\", unitPrice:0, unitInStock:0, pictureUrl:\"\", description:\"\"}})};\r\n    showShipperForm = ()=>{this.setState({ showShipperForm:true})};\r\n    hideShipperForm = ()=>{this.setState({ showShipperForm:false,   modifiedShipp:false, modifiedShipper:{_id:'', companyName:'', shippingPrice:0, shippingMethod:''}})};\r\n    hideProducts = ()=>{this.setState({ products:[]})};\r\n    hideSubscription = ()=>{this.setState({ subscriptions:[]})};\r\n    displayUsers = ()=> { \r\n        if(this.state.users.length > 0 ) {\r\n            let users =  this.state.users.map((user)=>{\r\n                return <ul className={\"orderContainer\"}>\r\n                    <li>Id: {user._id}</li>\r\n                    <li>Email: {user.email}</li>\r\n                    <li>Name: {user.username}</li>\r\n                </ul>\r\n            })\r\n            return <div>\r\n            <button onClick={this.hideUser}>Hide all users!</button>\r\n            {users}\r\n            </div>  \r\n        }\r\n       \r\n    }\r\n    displayProduktForm = ()=> {\r\n        if(this.state.showProductForm === true || this.state.modifiedProdcut === true) {\r\n\r\n            return (<div>\r\n                     <button onClick={this.hideProduktForm}>Hide Product form!</button>\r\n                    <ProductForm  modified={this.state.modified}/>\r\n                </div>)\r\n        }\r\n    }\r\n    updateThisShipper = async (shipper: {_id:string, companyName:string, shippingPrice:number, shippingMethod:string})=>{\r\n        this.setState({\r\n            modifiedShipper:{_id:shipper._id,\r\n            companyName:shipper.companyName,\r\n            shippingPrice:shipper.shippingPrice,\r\n            shippingMethod:shipper.shippingMethod},\r\n            modifiedShipp:true,\r\n            shippers:[]\r\n            });\r\n        \r\n    }\r\n    displayShipperForm = ()=> {\r\n        if(this.state.showShipperForm === true || this.state.modifiedShipp === true) {\r\n\r\n            return (<div>\r\n                     <button onClick={this.hideShipperForm}>Hide shipping method form!</button>\r\n                    <ShipperForm modified={this.state.modifiedShipper} getAllShipperMethods={this.getAllShipperMethods}/>\r\n                </div>)\r\n        }\r\n    }\r\n\r\n    modifyChoosenProduct = async (product:{productName: string, _id:string, unitPrice:number, unitInStock:number,pictureUrl:string, description:string})=>{\r\n        this.setState({\r\n            modified:{productName: product.productName, _id:product._id,unitPrice:product.unitPrice, \r\n              unitInStock:product.unitInStock,\r\n              pictureUrl:product.pictureUrl, description:product.description},\r\n              modifiedProdcut:true,\r\n              products:[]\r\n            });\r\n        \r\n    }\r\n    removeThisProduct = async (product:{productName: string, _id:string, unitPrice:number, unitInStock:number,pictureUrl:string, description:string})=>{\r\n        let requestBody = {\r\n            query: `\r\n            mutation {\r\n                deleteProduct(ProductDelete: {_id: \"${product._id}\"}) {\r\n                    ok\r\n                    n\r\n                    deletedCount\r\n                }\r\n              }\r\n              \r\n            `\r\n          };\r\n        \r\n        let data = await  requestHandler(requestBody);\r\n        typeof data !== 'undefined' ? \r\n\r\n        this.getAllProducts().then(()=>{\r\n          \r\n            alert(data.deleteProduct.n) \r\n        }) \r\n        :alert(\"We could not remove this product\")\r\n        \r\n    }\r\n    deleteThisShipper  = async (shipper:{_id:string, companyName:string, shippingPrice:number, shippingMethod:string})=>{\r\n        \r\n        let requestBody = {\r\n            query: `\r\n            mutation {\r\n                deleteShipper(ShipperDelete: {_id: \"${shipper._id}\"}) {\r\n                  ok\r\n                  n\r\n                  deletedCount\r\n                }\r\n              }\r\n              \r\n            `\r\n          };\r\n        \r\n        let data = await  requestHandler(requestBody);\r\n        typeof data !== 'undefined' ? this.getAllShipperMethods().then(()=>{\r\n            alert(data.deleteShipper.n) \r\n        }):alert(\"We could not remove this shipper\")\r\n        \r\n    }\r\n    displayProduct = ()=>{\r\n        if(this.state.products.length > 0) {\r\n            let products =  this.state.products.map((product)=>{\r\n                \r\n\r\n                return <ul className={\"orderContainer\"}>\r\n                    <span>One Product: </span>\r\n                    <li>{product._id}</li>\r\n                    <li>{product.productName}</li>\r\n                    <li>{product.pictureUrl}</li>\r\n                    <li>Total UnitInStock: {product.unitInStock}</li>\r\n                    <li>{product.unitPrice+ \" SEK\"}</li>\r\n                    <li>{product.description }</li>\r\n                    <button onClick={()=>this.modifyChoosenProduct(product)}>Modify This produkt</button>\r\n                    <button onClick={()=>this.removeThisProduct(product)}>Remove This produkt</button>\r\n                </ul>\r\n                \r\n            })\r\n            return <div>\r\n            <button onClick={this.hideProducts}>Hide All Products!</button>\r\n            {products}\r\n            </div>  \r\n        }\r\n    }\r\n    displaySubscriptions = ()=>{\r\n        if(this.state.subscriptions.length > 0 ){\r\n            let subscriptions =  this.state.subscriptions.map((subscription)=>{\r\n                \r\n\r\n                return <ul className={\"orderContainer\"}>\r\n                    <span>One Subscription: </span>\r\n                    <li>id: {subscription._id}</li>\r\n                    <li>Email: {subscription.email}</li>\r\n        \r\n                </ul>\r\n                \r\n            })\r\n            return <div>\r\n            <button onClick={this.hideSubscription}>Hide All Subscriptions!</button>\r\n            {subscriptions}\r\n            </div>  \r\n        }\r\n    }\r\n\r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"adminContainer\">\r\n                <h1>Hey Admin</h1>\r\n                <button className=\"buttonAdmin\" onClick={this.showProductForm}>Create A Product/update</button>\r\n                {this.displayProduktForm()}\r\n                <button  className=\"buttonAdmin\"  onClick={this.showShipperForm}>Create A Shipping method/update</button>\r\n                {this.displayShipperForm()}\r\n                <button  className=\"buttonAdmin\"  onClick={this.getAllProducts}>Show All Products!</button>\r\n                {this.displayProduct()}\r\n                <button  className=\"buttonAdmin\"  onClick={this.getAllOrders}>Show All Orders!</button>\r\n                {this.displayOrders()}\r\n                <button  className=\"buttonAdmin\"  onClick={this.getAllUsers}>Show All Users!</button>\r\n                {this.displayUsers()}\r\n                <button  className=\"buttonAdmin\"  onClick={this.getAllShipperMethods}>Show All Shipping Methods!</button>\r\n                {this.displayShippers()}\r\n                <button onClick={this.getAllSubscription}>Show All Subscription</button>\r\n                {this.displaySubscriptions()}\r\n                 \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n","import React,{Component } from 'react';\r\nimport FormMall from './FormMall';\r\nimport './form.css';\r\nimport { requestHandler,  loginHandler } from '../helpers/requestHandler';\r\nimport Admin from '../admin/admin';\r\ninterface CurrentUser {\r\n  id:string,\r\n  username:string,\r\n  email:string\r\n}\r\ninterface Props {\r\n    signedInUser:()=>void,\r\n    userInfo: CurrentUser\r\n}\r\ninterface  Order {\r\n    _id:string,\r\n    shipFirstName: string,\r\n    shipLastName: string,\r\n    shippAdress: string,\r\n    shippPostelCode: string,\r\n    shipCity: string,\r\n    shipMail: string,\r\n    shipPhoneNo: string,\r\n    totalPrice: number,\r\n    orderDate: string,\r\n    createdOrder: string,\r\n    selectedShipper: string,\r\n    createdAt: string,\r\n    updatedAt: string\r\n    \r\n}\r\ninterface Product {\r\n    _id: string,\r\n    productName:string,\r\n    unitInStock: number,\r\n    unitPrice: number,\r\n    pictureUrl: string,\r\n    counted:number\r\n}\r\ninterface choosenShipper {\r\n    _id:string,\r\n    companyName:string,\r\n    shippingPrice:number\r\n    shippingMethod:string\r\n  }\r\ninterface State{\r\n    email:string,\r\n    password:string,\r\n    signedUp:boolean,\r\n    text:string,\r\n    signOut: boolean,\r\n    current_user:string,\r\n    current_orders:Order[],\r\n    current_orders_products:{id:string, products:Product[]}\r\n    choosenShipper: {orderId:string, shipper:choosenShipper}\r\n}\r\n\r\nexport default class Form extends Component<Props,State>{\r\n    constructor(props:Props){\r\n        super(props);\r\n            this.state ={ \r\n            email:'',\r\n            password:'',\r\n            signedUp:true,\r\n            text:'',\r\n            signOut:false,\r\n            current_user:'',\r\n            current_orders:[],\r\n            current_orders_products:{id:'', products:[]},\r\n            choosenShipper:{orderId:'', shipper:{_id:'', companyName:'', shippingPrice:0, shippingMethod:''}}\r\n          \r\n        }\r\n    }\r\n\r\n    handleSubmit= async (event:React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n     \r\n        let requestBody = {\r\n            query: `\r\n              query {\r\n                login(email: \"${this.state.email}\", password: \"${this.state.password}\") {\r\n                  userId\r\n                  email\r\n                  username\r\n                }\r\n              }\r\n            `\r\n          };\r\n       \r\n          if (!this.state.signedUp) {\r\n            requestBody = {\r\n              query: `\r\n                mutation {\r\n                  createUser(UserInput: {email: \"${this.state.email}\", password: \"${this.state.password}\", username:\"${this.state.text}\"}) {\r\n                    _id\r\n                    email\r\n                    username\r\n                  }\r\n                }\r\n              `\r\n            };\r\n          }\r\n          let data = await  loginHandler(requestBody);\r\n          if(typeof data !== 'undefined') {\r\n\r\n              data.createUser?alert('We created new user'):this.saveUser(data.login)\r\n          }\r\n    }\r\n\r\n    saveUser = (user:{userId:string, email:string, username:string})=>{\r\n\r\n      let users:any = localStorage.getItem(\"users\");\r\n      let parsetUsers = JSON.parse(users);\r\n      /* Check if this user is already in locastorage */\r\n     if(parsetUsers.length > 0 ) {\r\n      localStorage.removeItem(\"current_user\");\r\n      localStorage.setItem(\"current_user\", JSON.stringify({id:user.userId, username:user.username, email:user.email}));\r\n      let existUser = false\r\n        parsetUsers.filter((savedUser:any)=>{\r\n\r\n          if(savedUser.email === user.email ) { existUser = true}\r\n          \r\n        })\r\n\r\n        if(!existUser) {\r\n          let sigendInUser = {id:user.userId, email:user.email, choosenProducts:[]}\r\n          parsetUsers.push(sigendInUser)\r\n          localStorage.setItem(\"users\", JSON.stringify(parsetUsers))\r\n        }\r\n        alert('You are signed in')\r\n     } else {\r\n     \r\n      let sigendInUser = {id:user.userId, email:user.email, choosenProducts:[]}\r\n      parsetUsers.push(sigendInUser)\r\n      localStorage.setItem(\"users\", JSON.stringify(parsetUsers));\r\n      localStorage.setItem(\"current_user\", JSON.stringify({id:user.userId, username:user.username, email:user.email}));\r\n      alert('You are signed in')\r\n     }\r\n     this.props.signedInUser()\r\n     this.setState({signOut:true, email:'', password:'', text:'' , current_user:user.username, current_orders:[]})\r\n     \r\n    }\r\n\r\n    handleOnChange = (event: React.ChangeEvent<HTMLInputElement>)=>{this.setState({[event.target.type]:event.target.value } as Pick <State,any> )}\r\n    handleLogout = () => { this.setState({ signedUp: false })}\r\n    handleLogin = () => { this.setState({ signedUp: true })}\r\n    \r\n    renderSignInSignUp = ()=> {\r\n        \r\n      return this.state.signedUp ? <button onClick={this.handleLogout}>Sign In</button>: <button onClick={this.handleLogin}>Sign Up</button>;\r\n    }\r\n\r\n    renderUsername = ()=> {\r\n      if(this.state.signedUp) {\r\n        return '';\r\n\r\n      } else {\r\n        return ( <input className={\"inputStyle\"} type=\"text\"  placeholder=\"name\" onChange={this.handleOnChange} value={this.state.text} required/>)\r\n      }\r\n    }\r\n\r\n    getCurrentOrders = async ()=> {\r\n    if(this.props.userInfo.id !== '') {\r\n      let requestBody = {\r\n          query: `\r\n          { getSpeceficOrder(_id: \"${this.props.userInfo.id}\") {\r\n              _id\r\n              shipFirstName\r\n              shipLastName\r\n              shippAdress\r\n              shippPostelCode\r\n              shipCity\r\n              shipMail\r\n              shipPhoneNo\r\n              totalPrice\r\n              orderDate\r\n              createdOrder\r\n              selectedShipper\r\n              createdAt\r\n              updatedAt\r\n            }\r\n          }`\r\n        };\r\n  \r\n        let data = await requestHandler(requestBody);\r\n        typeof data !== 'undefined' ? this.setState({current_orders:data.getSpeceficOrder},()=>{ if(this.state.current_orders.length <=0){\r\n          alert(\"You Have No Order Yet!\")\r\n        }}):this.setState({current_orders:[]})\r\n        \r\n        } \r\n    }\r\n\r\n    showOrderDetails = async (id:string) => {\r\n      if(this.props.userInfo.id !== '') {  \r\n        let requestBody = {\r\n            query: `\r\n            {\r\n              getSpeceficOrderDetails(_id: \"${id}\") {\r\n                productName\r\n                pictureUrl\r\n                unitInStock\r\n                unitPrice\r\n                counted\r\n              }\r\n            } `\r\n          };\r\n    \r\n          let data = await requestHandler(requestBody);\r\n          typeof data !== 'undefined' ? this.setState({current_orders_products: {id:id, products:data.getSpeceficOrderDetails}})\r\n          :this.setState({current_orders_products:{id:'', products:[]}})\r\n  \r\n      }\r\n\r\n    }\r\n    showCurrentOrderProduct = ()=>{\r\n        if(this.state.current_orders_products.products.length > 0) {\r\n            let orders = this.state.current_orders_products.products.map((product)=>{\r\n                return <ul className={\"itemOrderContainer\"} >\r\n                        \r\n                        <img className={\"img-order\"} src={process.env.PUBLIC_URL +`/imgs/${product.pictureUrl}`} alt={product.productName}/>\r\n                        <li>{product.productName}</li>\r\n                        <li>{product.unitPrice+ \"SEK\"}</li>\r\n                        <li>Amount-shop: {product.counted}</li>\r\n                    </ul>\r\n            })\r\n            return <div>\r\n              <button onClick={this.hideOrderDetail}>Hide Order Detail</button>\r\n              {orders}\r\n            </div>\r\n        }\r\n    }\r\n    getChoosenShipper = async (id:string, orderId:string) => {\r\n        if(this.props.userInfo.id !== '') {\r\n          let requestBody = {\r\n            query: `\r\n            {   getSpeceficShipper(_id: \"${id}\") {\r\n                  companyName\r\n                  shippingPrice\r\n                  shippingMethod\r\n                }\r\n              }`\r\n          };\r\n          let data = await requestHandler(requestBody);\r\n          typeof data !== 'undefined' ? this.setState({choosenShipper:{orderId:orderId, shipper:data.getSpeceficShipper}})\r\n          :this.setState({choosenShipper:{orderId:'', shipper:{_id:'', shippingPrice:0, shippingMethod:'', companyName:''}}})\r\n      \r\n          }\r\n    \r\n    }\r\n    displayChoosenShipper = ()=> {\r\n        return <div>\r\n            <button onClick={this.hideChoosenShipper}>Hide Choosen Shipper</button>\r\n            <ul className={\"orderContainer\"}>\r\n                    <li>{this.state.choosenShipper.shipper.companyName}</li>\r\n                    <li>{this.state.choosenShipper.shipper.shippingMethod}</li>\r\n                    <li>{this.state.choosenShipper.shipper.shippingPrice+ \"SEK\"}</li>\r\n                </ul>\r\n            \r\n            </div>\r\n    }\r\n    hideOrderDetail = ()=>{this.setState( {current_orders_products:{id:'', products:[]}})}\r\n    hideChoosenShipper = ()=>{this.setState({ choosenShipper:{orderId:'', shipper:{_id:'', companyName:'', shippingPrice:0, shippingMethod:''}}})}\r\n    hideAllOrders = ()=>{this.setState({current_orders:[]})}\r\n    displayCurrentOrder = ()=> {\r\n        if(this.state.current_orders.length > 0) {\r\n            let test =  this.state.current_orders.map((order)=>{\r\n            return <ul className={\"orderContainer\"}>\r\n                        One Order: \r\n                        <li>OrdId: {order._id}</li>\r\n                        <li>Name: {order.shipFirstName}</li>\r\n                        <li>Lastname: {order.shipLastName}</li>\r\n                        <li>Address: {order.shippAdress} Postnummer: {order.shippPostelCode} Stad: {order.shipCity}</li>\r\n                        <li>Email: {order.shipMail}</li>\r\n                        <li>Tel: {order.shipPhoneNo}</li>\r\n                        <li>Date: {order.orderDate}</li>\r\n                        <button className={\"orderButton\"}  onClick={()=> this.showOrderDetails(order._id)}>Visa order details</button>\r\n\r\n                        <div>{this.state.current_orders_products.id === order._id ? this.showCurrentOrderProduct():''}</div>\r\n                        \r\n                        \r\n                        <button  className={\"orderButton\"} onClick={()=> this.getChoosenShipper(order.selectedShipper, order._id)}>Visa valt frakt</button>\r\n                        {this.state.choosenShipper.orderId === order._id ? this.displayChoosenShipper():''}\r\n                 </ul>\r\n            })\r\n            return <div>\r\n              <button onClick={this.hideAllOrders}>Hide All Orders</button>\r\n              {test}\r\n            </div>\r\n        }\r\n    }\r\n\r\n    renderForm = () => {\r\n        return (\r\n          <FormMall>\r\n            <h1>{this.state.signedUp?'Sign In':'Sign Up!' }</h1>\r\n              <label>Change To {this.renderSignInSignUp()}</label>\r\n          <form onSubmit={this.handleSubmit} className={\"formStyle\"}>\r\n           \r\n                  <input className={\"inputStyle\"} type=\"email\"  placeholder='email' onChange={this.handleOnChange} value={this.state.email}  required/>\r\n                  <input className={\"inputStyle\"} type=\"password\"  placeholder=\"password\" onChange={this.handleOnChange} value={this.state.password} required/>\r\n                 {this.renderUsername()}\r\n              <input type=\"submit\" value='Submit'/>\r\n          </form>\r\n          </FormMall>\r\n        )\r\n    }\r\n\r\n    renderCurrentUserInfo = () => {\r\n      if(this.props.userInfo.id !== '' && this.props.userInfo.email !== \"admin@gmail.com\") {\r\n        return (<div className={\"orderContainer\"}>\r\n                 <button className={\"orderButton\"} onClick={this.getCurrentOrders}>Show All Orders! </button>\r\n                 <div  className={\"orderContainer\"}>\r\n                    {this.displayCurrentOrder()}\r\n                 </div>\r\n             \r\n            </div>)\r\n      } else if (this.props.userInfo.id !== '' && this.props.userInfo.email === \"admin@gmail.com\"){\r\n        return <Admin />\r\n      }else {\r\n        return this.renderForm()\r\n      }\r\n    }\r\n\r\n    render (){ return ( this.renderCurrentUserInfo() ) }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport  './shoppingCard.css';\r\nimport { changeUrl } from '../helpers/requestHandler';\r\nimport { Alert } from 'reactstrap';\r\ninterface Props {\r\n    amount:number,\r\n    getAddedProducts:(data:[{productName: string,_id:string, unitPrice:number, unitInStock:number,pictureUrl:string}])=>void,\r\n\r\n}\r\n\r\ninterface State {\r\n  \r\n    removed:boolean,\r\n    visible:boolean\r\n}\r\nexport default class ShoppingCard extends React.Component<Props, State>{\r\n    constructor(props:Props){\r\n        super(props);\r\n        this.state = {\r\n            removed:false,\r\n            visible:false\r\n        }\r\n    }\r\n\r\n    showMessageForRemovedProduct = ()=> { \r\n\r\n        this.setState({visible:true},()=>{\r\n          window.setTimeout(()=>{\r\n            this.setState({visible:false})\r\n          },1000)\r\n        });\r\n    }\r\n  \r\n\r\n    removeItem = (product:{productName: string, _id:string, unitPrice:number, unitInStock:number, pictureUrl:string }, i:number)=>{\r\n        let shoppingCart:any = localStorage.getItem(\"shoppingcart\");\r\n        let parsedShoppingCart = JSON.parse(shoppingCart);\r\n        parsedShoppingCart.some((value:{productName: string, _id:string, unitPrice:number, unitInStock:number, pictureUrl:string }, index:number)=>{\r\n            if(value._id === product._id && index === i) {\r\n                parsedShoppingCart.splice(index, 1)\r\n            }\r\n        \r\n        })\r\n       \r\n        localStorage.setItem(\"shoppingcart\", JSON.stringify(parsedShoppingCart ))\r\n        this.setState({removed: true});\r\n        this.props.getAddedProducts(parsedShoppingCart);\r\n        this.showMessageForRemovedProduct()\r\n    }\r\n\r\n    getProductsFromShopingCard = ()=> {\r\n        let shoppingCart:any = localStorage.getItem(\"shoppingcart\");\r\n        let parsedShoppingCart = JSON.parse(shoppingCart);\r\n       \r\n        if(parsedShoppingCart !== null && parsedShoppingCart.length > 0 ||this.state.removed === true){\r\n           \r\n            return parsedShoppingCart.map((product:{productName: string, _id:string, unitPrice:number, unitInStock:number, pictureUrl:string }, index:number)=>{\r\n                return <div className={\"d-flex flex-column align-items-center backgroundOdd container\"}>\r\n                             <img id={'img'} src={process.env.PUBLIC_URL +`/imgs/${product.pictureUrl}`} alt={product.productName}/>\r\n                             <h4>{product.productName}</h4>\r\n                             <h4>{product.unitPrice+' SEK'}</h4>\r\n                             <span>Quantity: {1}</span>\r\n                             <button id=\"removeButton\"onClick={()=> this.removeItem(product, index)}>Remove</button>\r\n                            \r\n                           </div>\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    renderLinkToCheckOut = ()=>{\r\n        if(this.props.amount >= 0) {\r\n            return (\r\n                <Link to={\"/checkOut\"}>\r\n                    <span id={\"vidareKassan\"} className={\"containerVidareKassan\"} onClick={()=>{ changeUrl('checkOut')}}>Go To Checkout!</span>\r\n                </Link>\r\n            )\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    render(){\r\n        return(\r\n                \r\n            <div>\r\n                <h4 id={'shopping-cart-title'}>Welcome To Shopping Cart</h4>\r\n                {this.renderLinkToCheckOut()}\r\n                <Alert color=\"alert alert-danger\" isOpen={this.state.visible} >\r\n                You Removed One Product\r\n                </Alert>\r\n            <div  className={\"d-flex align-items-center backgroundOdd majorContainer\"} >\r\n                {this.getProductsFromShopingCard()}\r\n            </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React,{Component, CSSProperties} from 'react';\r\nimport Axios from 'axios';\r\nimport FormMall from '../signInSignUp/FormMall';\r\nimport { Link } from 'react-router-dom';\r\nimport { changeUrl } from '../helpers/requestHandler';\r\ninterface CurrentUser {\r\n    id:string,\r\n    username:string\r\n    email:string\r\n}\r\n\r\ninterface Props {\r\n\r\ntotalPrice:number,\r\nuserInfo:CurrentUser\r\n}\r\n\r\ninterface Shipper {\r\n    _id:string,\r\n    companyName:string,\r\n    shippingPrice:number,\r\n    shippingMethod:string\r\n}\r\ninterface State{\r\n    shipFirstName:String,\r\n    shipLastName:String,\r\n    shippAdress:String,\r\n    shippPostelCode:string,\r\n    shipCity:String,\r\n    email:String,\r\n    tel:String,\r\n    totalPrice:any,\r\n    orderDate:String,\r\n    createdOrder:string,\r\n    selectedShipper:string\r\n    shippers:Shipper[]\r\n \r\n\r\n}\r\n\r\nexport default class CheckOut extends Component<Props,State>{\r\n    constructor(props:Props){\r\n        super(props);\r\n            this.state = { \r\n                shipFirstName:'',\r\n                shipLastName:'',\r\n                shippAdress:'',\r\n                shippPostelCode:'',\r\n                shipCity:'',\r\n                email:'',\r\n                tel:'',\r\n                totalPrice:0,\r\n                orderDate:'',\r\n                createdOrder:'',\r\n                selectedShipper:'',\r\n                shippers:[]\r\n        \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getShipperMethods();\r\n        let createdOrder = new Date().toISOString();\r\n        this.handleOrderDate(createdOrder);\r\n        this.handleOrderPrice(); \r\n       \r\n    }\r\n\r\n    getShipperMethods = async ()=> {\r\n        let requestBody = {query:`\r\n            { shippers {\r\n            _id\r\n            shippingMethod\r\n            shippingPrice,\r\n            companyName\r\n            }\r\n        }`};\r\n        \r\n        try  {\r\n          let res = await Axios({\r\n              url:'/graphql',\r\n              method: 'POST',\r\n              data: JSON.stringify(requestBody),\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            })\r\n            \r\n          let actuResponse = await res.data;\r\n          actuResponse.data.shippers !== false ? this.setState({shippers: actuResponse.data.shippers}): this.setState({shippers:[]})\r\n          \r\n        } catch(err){\r\n           console.log(\"Error at getting shippers\"+err)\r\n        }\r\n    }\r\n\r\n    handleSubmit=  (event:React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n       this.setState({createdOrder:this.props.userInfo.id}, async()=>{\r\n  \r\n           if(this.state.createdOrder === '') {\r\n               alert('Sign In First!')\r\n           } else { \r\n          \r\n             let shoppingCart:any = localStorage.getItem(\"shoppingcart\");\r\n             let parsedShoppingCart = JSON.parse(shoppingCart);\r\n             let productIds:string[] = [];\r\n             let choosenProducts = parsedShoppingCart.map((item:{ productName: string, _id:string, unitPrice: number, unitInStock: number, pictureUrl:string})=>{\r\n                 productIds.push(item._id)\r\n                     \r\n                 return {\"name\":item.productName, \"sku\":\"item\", \"price\":item.unitPrice.toString() +'.'+'00', \"currency\":\"SEK\", \"quantity\":1}\r\n             })\r\n     \r\n                if(productIds.length <= 0) {\r\n                    alert(\"Select Product First\")\r\n                } else {\r\n                    let current_order = {\r\n                        items:choosenProducts,\r\n                        productIds:productIds,\r\n                        shipFirstName:this.state.shipFirstName,\r\n                        shipLastName:this.state.shipLastName,\r\n                        shippAdress:this.state.shippAdress,\r\n                        shippPostelCode:this.state.shippPostelCode,\r\n                        shipCity:this.state.shipCity,\r\n                        email:this.state.email,\r\n                        tel:this.state.tel,\r\n                        totalPrice:this.state.totalPrice,\r\n                        orderDate:this.state.orderDate,\r\n                        createdOrder:this.state.createdOrder,\r\n                        selectedShipper:this.state.selectedShipper === ''?this.state.shippers[0]._id:this.state.selectedShipper,\r\n                       }\r\n                   try  {\r\n                     let res = await Axios({\r\n                         url:'/pay2',\r\n                         method: 'POST',\r\n                         data: JSON.stringify(current_order),\r\n                         headers: {\r\n                           'Content-Type': 'application/json'\r\n                         }\r\n                       })\r\n                       \r\n                     let actuResponse = await res.data;\r\n                     window.location.assign(actuResponse.url)\r\n                     localStorage.setItem(\"shoppingcart\",JSON.stringify([]))\r\n                  \r\n                   } catch(err){\r\n                      console.log(\"Error at posting orders\"+err)\r\n                   }\r\n           \r\n                }\r\n           }\r\n       })\r\n     \r\n    }\r\n    \r\n\r\n\r\n\r\n    handleFirstName = (event: React.ChangeEvent<HTMLInputElement>)=>{ this.setState({shipFirstName:event.target.value }) }\r\n    handleLastName= (event: React.ChangeEvent<HTMLInputElement>)=>{ this.setState({shipLastName:event.target.value }) }\r\n    handleAddresss= (event: React.ChangeEvent<HTMLInputElement>)=>{ this.setState({shippAdress:event.target.value }) }\r\n    handleShipperPostalconde= (event: React.ChangeEvent<HTMLInputElement>)=>{ this.setState({shippPostelCode:event.target.value }) }\r\n    handleShipperCity= (event: React.ChangeEvent<HTMLInputElement>)=>{ this.setState({shipCity:event.target.value }) }\r\n    handleEmailAndPhone = (event: React.ChangeEvent<HTMLInputElement>)=>{ this.setState({[event.target.type]:event.target.value } as Pick<State, any>) }\r\n    handleOrderDate = (createdOrder:string)=>{ this.setState({orderDate:createdOrder}) }\r\n    \r\n\r\n   \r\n    handleOrderPrice = ()=>{ \r\n        let totalPrice = this.props.totalPrice;\r\n\r\n        let shoppingCart:any = localStorage.getItem(\"shoppingcart\");\r\n        let parsedShoppingCart = JSON.parse(shoppingCart);\r\n\r\n            let initTolatlPrice = 0\r\n            for(let product of parsedShoppingCart) {\r\n                let price = product.unitPrice\r\n            \r\n                initTolatlPrice += price\r\n            }\r\n        let finalTotalPrice = totalPrice === 0?  initTolatlPrice: totalPrice\r\n        this.setState({totalPrice: finalTotalPrice}\r\n        \r\n    ) }\r\n\r\n    handleSelectShipper = (event: any)=>{ \r\n        this.setState({selectedShipper:event.target.value}) }\r\n\r\n    \r\n    renderShippers = ()=>{\r\n        if(this.state.shippers.length > 0) {\r\n\r\n            return this.state.shippers.map((shipper:{_id:string ,companyName:string ,shippingPrice:number,shippingMethod:string})=>{\r\n\r\n            return <option value={shipper._id}>{\r\n                `${shipper.companyName} ${shipper.shippingMethod} ${shipper.shippingPrice}SEK`}</option>\r\n            })\r\n           \r\n        }\r\n    }\r\n   \r\n    render(){\r\n        return (\r\n            <FormMall>\r\n                <span>Welcome To Checkout </span>\r\n                <form onSubmit={this.handleSubmit} style={formtStyle}>\r\n                    <label><i className=\"fa fa-user\"></i> Userrname</label>\r\n                    <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Sven\" onChange={this.handleFirstName} required />\r\n\r\n                    <label ><i className=\"fa fa-user\"></i> Lastname</label>\r\n                    <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Svensson\" onChange={this.handleLastName} required/>\r\n\r\n                    <label><i className=\"fa fa-envelope\"></i> Email</label>\r\n                    \r\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"john@example.com\" onChange={this.handleEmailAndPhone } required/>\r\n                    <label><i className=\"fa fa-home\"></i> Address</label>\r\n                    <input type=\"text\" id=\"adr\" name=\"address\" placeholder=\"Svenssongatan 14a\" onChange={this.handleAddresss} required/>\r\n\r\n                    <label> City</label>\r\n                    <input type=\"text\" id=\"city\" name=\"city\" placeholder=\"Goteborg\" onChange={this.handleShipperCity} required/>\r\n\r\n                    <label><i className=\"fa fa-institution\"></i> Postal code</label>\r\n                    <input type=\"text\" id=\"postalcode\" name=\"postalcode\" placeholder=\"43350\" onChange={this.handleShipperPostalconde} required />\r\n\r\n                    <label> Phone</label>\r\n                    <input type=\"tel\" id=\"shipPhoneNO\" name=\"shipPhoneNO\" placeholder=\"1212\" onChange={this.handleEmailAndPhone } required/>\r\n\r\n                    <label> Total Price In Sek</label>\r\n                    <h5>{this.state.totalPrice} kr</h5>\r\n                    <select value={this.state.selectedShipper} onChange={this.handleSelectShipper} required>\r\n                        {this.renderShippers()}\r\n                    </select>\r\n              <input type=\"submit\" value='Slutföra Ditt Köp'/>\r\n          </form>\r\n          <Link to={\"/shoppingCard\"}>\r\n                    <span onClick={()=>{ changeUrl('shoppingCard')}}>Want To Go Back ToShopping Cart</span>\r\n        </Link>\r\n        </FormMall>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst formtStyle: CSSProperties ={\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n    margin:\"auto\",\r\n    width:\"50%\",\r\n    marginTop:\"3em\",\r\n    padding:\"1em\",\r\n    backgroundColor:\"#d7e4c7\"\r\n  }\r\n  ","import React from 'react';\r\n\r\nimport { getValueFromLocalstoreage, requestHandler,  removeValueFromLocalstoreage,setValueToLocalstoreage } from '../helpers/requestHandler';\r\nimport { Alert} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\ninterface Props{\r\n    getAddedProducts:(data:[{productName: string,_id:string, unitPrice:number, unitInStock:number,pictureUrl:string}])=>void\r\n}\r\ninterface Product {\r\n  productName: string,\r\n  _id:string,\r\n  unitPrice:number,\r\n  unitInStock:number,\r\n  pictureUrl:string,\r\n  description:string\r\n}\r\n\r\ninterface State{\r\n    visible:boolean,\r\n    choosenProduct:Product\r\n}\r\nexport default class SingleProduct extends React.Component<Props, State>{\r\n    constructor(props:Props){\r\n        super(props);\r\n            this.state ={ \r\n                visible:false,\r\n                choosenProduct:{productName: \"\", _id: \"\", unitPrice:0, unitInStock:0, pictureUrl:\"\", description:\"\"}\r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n      this.findSpeceficProduct()\r\n    }\r\n\r\n    findSpeceficProduct = async ()=>{\r\n      let url_string = window.location.href\r\n      let url = new URL(url_string);\r\n      let param = url.pathname.substring(18)\r\n         let requestBody = {\r\n          query: `{\r\n            getSpeceficProduct(_id: \"${param}\") {\r\n              _id,\r\n              productName,\r\n              unitPrice\r\n              pictureUrl,\r\n              unitInStock,\r\n              description\r\n            }\r\n          }`\r\n        };\r\n      \r\n      let data = await  requestHandler(requestBody);\r\n\r\n      typeof data !== 'undefined' ? this.setState({choosenProduct:data.getSpeceficProduct}): this.setState({choosenProduct:{productName: \"\", _id: \"\", unitPrice:0, unitInStock:0, pictureUrl:\"\", description:\"\"}})\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    showAddedProduct = ()=> { \r\n\r\n        this.setState({visible:true},()=>{\r\n          window.setTimeout(()=>{\r\n            this.setState({visible:false})\r\n          },1000)\r\n        });\r\n  \r\n  \r\n      \r\n      }\r\n    \r\n    addProduct = (product:{ productName: string, _id:string, unitPrice:number,unitInStock:number,pictureUrl:string})=>{\r\n\r\n        let shoppingCart:any = getValueFromLocalstoreage(\"shoppingcart\");\r\n        \r\n        shoppingCart.push(product);\r\n        setValueToLocalstoreage(\"shoppingcart\", shoppingCart);\r\n\r\n        this.props.getAddedProducts(shoppingCart);\r\n        this.showAddedProduct();\r\n    }\r\n\r\n    removeSelectedProduct = () => { removeValueFromLocalstoreage('selectedProducts');}\r\n\r\n    renderSelectedProdcut = () => {\r\n       \r\n        if(this.state.choosenProduct._id !== \"\") {\r\n         \r\n          return <div>\r\n        <Link to={`/productPage`}> \r\n        <i className=\"fas fa-arrow-left left-arrow-color\" id=\"link\"></i>\r\n         \r\n        </Link> \r\n          <Alert color=\"alert alert-success\" isOpen={this.state.visible} >\r\n                 You Added One Product To Shopping Cart\r\n          </Alert>\r\n          <div  className={\"backgroundOdd d-flex flex-column align-items-center\"}>\r\n            <img className={'img'} src={process.env.PUBLIC_URL +`/imgs/${this.state.choosenProduct.pictureUrl}`} alt={this.state.choosenProduct.productName}/>\r\n            <div className={\"detailContainer\"}>\r\n            <h6>Name: {this.state.choosenProduct.productName}</h6>\r\n            <h6> Price: {this.state.choosenProduct.unitPrice+\" SEK\"}</h6>\r\n            <h6>Produkt Quantity: {this.state.choosenProduct.unitInStock}</h6>\r\n            <div>Description: {this.state.choosenProduct.description}</div>\r\n           \r\n            <button id=\"addButton\"onClick={()=> this.addProduct(this.state.choosenProduct)}>Add To Shopping Cart!</button>\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n  \r\n        } \r\n      }\r\n      \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n              { this.renderSelectedProdcut()}\r\n            </div>\r\n            \r\n      \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom' ;\r\nimport  { Route} from 'react-router';\r\nimport MainView from './mainView/MainView';\r\nimport ProductPage from './product/ProductPage';\r\nimport ContactPage from './contacts/ContactPage';\r\nimport Form from './signInSignUp/Form';\r\nimport ShoppingCard  from './shoppingCard/shoppingCard';\r\nimport CheckOut from './checkOut/checkOut';\r\nimport Admin from './admin/admin';\r\nimport SingleProduct from './singleProduct/SingleProduct';\r\n \r\ninterface Product {\r\n    productName: string,\r\n    _id:string,\r\n    unitPrice:number,\r\n    unitInStock:number,\r\n    pictureUrl:string\r\n}\r\n interface State {\r\n    products:Product[]\r\n }\r\n \r\ninterface CurrentUser {\r\n    id:string,\r\n    username:string,\r\n    email:string\r\n}\r\n\r\n interface Props {\r\n    signedInUser:()=>void,\r\n    userInfo:CurrentUser,\r\n    getAddedProducts:(data:[{productName: string,_id:string, unitPrice:number, unitInStock:number,pictureUrl:string}])=>void,\r\n    totalPrice:number,\r\n    amount:number\r\n }\r\n\r\nexport default class ViewContainer extends React.Component<Props, State>{\r\n    constructor(props:Props) {\r\n        super(props);\r\n        this.state = {\r\n            products:[]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <React.Fragment>            \r\n        <Switch>\r\n            <React.Fragment>\r\n                <Route exact path=\"/\" component={MainView}  />\r\n                <Route path=\"/productPage\"  render={ ()=> <ProductPage \r\n                getAddedProducts={this.props.getAddedProducts} \r\n              \r\n                />}/>\r\n                <Route path=\"/contact\" component={ContactPage}/>\r\n                <Route path=\"/SigninSignUp\" render={()=> <Form signedInUser={this.props.signedInUser} userInfo={this.props.userInfo}/>} />\r\n                <Route path=\"/shoppingCard\" render={ ()=> <ShoppingCard  amount={this.props.amount} getAddedProducts={this.props.getAddedProducts} /> }/>\r\n                <Route path=\"/checkOut\" render={()=><CheckOut totalPrice={this.props.totalPrice} userInfo={this.props.userInfo}/>}/>\r\n                <Route path=\"/admin\" component={Admin}/>\r\n                <Route path=\"/singleProduct\"  render={ ()=> <SingleProduct   getAddedProducts={this.props.getAddedProducts} /> }/>\r\n\r\n            </React.Fragment>\r\n        </Switch>\r\n        </React.Fragment>)          \r\n    }\r\n}\r\n","import React from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport ViewContainer from './ViewContainer';\r\ninterface CurrentUser {\r\n    id:string,\r\n    username:string,\r\n    email:string\r\n}\r\ninterface State {\r\n    current_user:CurrentUser,\r\n    amount:number,\r\n    totalPrice:number\r\n  \r\n}\r\ninterface Props {\r\n\r\n}\r\nexport default class Layout extends React.Component<Props, State>{\r\n  \r\n    constructor(props:Props){\r\n        super(props);\r\n            this.state = { \r\n            current_user:{id:'', username:'', email:''},\r\n            amount:0,\r\n            totalPrice:0\r\n           \r\n        \r\n        }\r\n\r\n  \r\n    }\r\n\r\n    componentDidMount(){\r\n        let selectedUsers:any = localStorage.getItem(\"users\");\r\n        let currentShoppingCard:any = localStorage.getItem(\"shoppingcart\");\r\n     \r\n        selectedUsers === null || selectedUsers === false ? localStorage.setItem(\"users\",\"[]\"):localStorage.getItem(\"users\");\r\n        currentShoppingCard === null ||currentShoppingCard === false ? localStorage.setItem(\"shoppingcart\",JSON.stringify([])):localStorage.getItem(\"shoppingcart\");\r\n\r\n        this.checkForUser()\r\n    }\r\n\r\n  \r\n      checkForUser = ()=>{\r\n       \r\n        let current_user :any = localStorage.getItem(\"current_user\");\r\n        let parsedCurrentUser:any = JSON.parse(current_user);\r\n        if(current_user) {\r\n            this.setState({current_user:{username:parsedCurrentUser.username, id:parsedCurrentUser.id, email:parsedCurrentUser.email}})\r\n        }\r\n\r\n      }\r\n      \r\n      \r\n    \r\n    \r\n    \r\n      renderCurrentSignedInUser = ()=>{\r\n     \r\n        if(this.state.current_user.id !== '') {\r\n            return <div>\r\n                    <h4 className=\"nav-link\"> Hey {this.state.current_user.username }</h4>\r\n                    <button className=\"nav-link\" onClick={this.signOut}>Sign Out</button>\r\n                </div>\r\n    \r\n        } else {\r\n            return ''\r\n        }\r\n    \r\n      }\r\n    \r\n      signOut = () =>{\r\n        localStorage.removeItem(\"current_user\");\r\n        this.setState({current_user:{id:'', username:'', email:''}})\r\n        return ''\r\n      }\r\n\r\n      getAddedProducts = (products:[{productName: string,_id:string, unitPrice:number, unitInStock:number,pictureUrl:string}])=>{\r\n     \r\n        //return products\r\n        let initTolatlPrice = 0\r\n        for(let product of products) {\r\n            let price = product.unitPrice\r\n         \r\n            initTolatlPrice += price\r\n        }\r\n        this.setState({amount:products.length, totalPrice:initTolatlPrice})\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n                \r\n            <div>\r\n                <Navbar \r\n                signedInUser={this.renderCurrentSignedInUser} \r\n                amount={this.state.amount}\r\n                totalPrice={this.state.totalPrice}\r\n                />\r\n                <ViewContainer \r\n                signedInUser={this.checkForUser}\r\n                userInfo={this.state.current_user}\r\n                getAddedProducts={this.getAddedProducts}\r\n                totalPrice={this.state.totalPrice}\r\n                amount={this.state.amount}\r\n                />\r\n             \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React,{ Component } from 'react';\r\n//import Form from './signInSignUp/Form';\r\nimport Layout from './Layout'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\ninterface State {\r\n    userId:string,\r\n    email:string\r\n\r\n}\r\n\r\ninterface Props {}\r\n    export default class App  extends Component<Props,State> {\r\n\r\n    constructor(props: Props){\r\n        super(props);\r\n        this.state = {\r\n            userId:'',\r\n            email:''\r\n        }\r\n    }\r\n\r\n    isLoggedin = (user:{email:string, userId:string})=>{\r\n        this.setState({userId:user.userId, email:user.email})\r\n    }\r\n   \r\n    render() {\r\n\r\n    return (\r\n    <div>\r\n        <BrowserRouter>\r\n            <Layout />\r\n        </BrowserRouter>\r\n    </div>\r\n    )}\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/mainView.1734ba85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/support.349650ff.jpg\";"],"sourceRoot":""}